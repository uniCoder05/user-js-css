{"libs":[{"name":"jQuery 3","src":"@extension@jquery.min.js"},{"name":"Moment","src":"https://momentjs.com/downloads/moment.js"}],"settings":{"badgeCounter":false,"editorConfig":{"enableBasicAutocompletion":false,"enableLiveAutocompletion":true,"enableSnippets":true,"fontSize":15,"highlightActiveLine":false,"keyboardHandler":false,"showPrintMargin":false,"tabSize":4,"theme":"ace/theme/tomorrow_night","useSoftTabs":false,"useWorker":true,"wrap":true},"supportBtn":false,"themesFolder":["chrome","clouds","dawn","dracula","dreamweaver","eclipse","github","monokai","solarized_dark","solarized_light","textmate","tomorrow","tomorrow_night","twilight"],"version":8},"sites":[{"compiledCss":"","css":"","id":"https://ru.stackoverflow.com/","js":"console.log('Hello, Man!');","libs":[],"name":"","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":"","css":"","id":"https://etp.armtek.ru/tool_transmission_goods","js":"setPrinter();\r\nfunction setPrinter() {\r\n\tconst P = 'R089';\r\n\tconst URL = 'tool_vstyp_printer/setPrinter/';\r\n\tconst d = {\r\n\t\tprinter: P,\r\n\t\tprinter_type: 'PRNS',\r\n\t};\r\n\t\r\n\tgetApiAjax(URL, d, s, e);\r\n\t\r\n\tfunction s() {\r\n\t\tprinter = true;\r\n\t\tconsole.log('%c%s', 'color:lime', 'Printer set successefull: ' + P);\r\n\t};\r\n\tfunction e() {\r\n\t\tconsole.log('%c%s', 'color:pink','Printer set error: ' + P);\r\n\t}\r\n};","libs":[],"name":"Самовывоз_принтер","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":"","css":"","id":"https://www.kinopoisk.ru/","js":"console.log('User js and css');","libs":["Moment"],"name":"","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":"a.dropdown-toggle.mcss {color: blue!important;}","css":"a.dropdown-toggle.mcss {\n\tcolor: blue;\n}","id":"https://etp.armtek.*","js":"const OFFICE = 'SA40';\nconst KB = ['STELLOX', 'AREOL', 'EDCON', 'WEZER', 'ZENTPARTS', 'CAREX', 'CHEMIPRO', 'REPARTS', 'BRIX'];\nconst CUR_MNGR = '41K';\nconst TIMINGS = [\n\t\t\t\t  '06:45',\n\t\t\t\t  '08:00',\n\t\t\t\t  '10:00',\n\t\t\t\t  '11:15',\n\t\t\t\t  '12:00',\n\t\t\t\t  '13:00',\n\t\t\t\t  '14:00',\n\t\t\t\t  '15:00',\n\t\t\t\t  '15:30',\n\t\t\t\t  '16:00',\n\t\t\t\t  '16:30',\n\t\t\t\t  '17:00',\n\t\t\t\t  '17:30',\n\t\t\t\t  '17:50',\n\t\t\t\t  '19:00',\n\t\t\t\t  '19:30',\n\t\t\t\t  '20:00',\n\t\t\t\t  '20:30',\n\t\t\t\t  '21:00',\n\t\t\t\t  '21:30',\n\t\t\t\t  '22:00',\n\t\t\t\t  '22:20',\n\t\t\t\t  '23:41'\n\t\t\t\t];\nconst MNGRS = {\n\t'IALYAEV@SAMARA.ARMTEK.RU': ['7UK','Аляев Иван Андреевич'],\t\n\t'VOLKOV@SAMARA.ARMTEK.RU': ['41K','Волков Алексей Сергеевич'],\t\n\t'AKAZAKOV@SAMARA.ARMTEK.RU': ['7UL','Казаков Андрей Алексеевич', ],\n\t'AKONDRASHKIN@SAMARA.ARMTEK.RU': ['BG7','Кондрашкин Александр Александрович'],\t\n\t'OPISCHULINA@SAMARA.ARMTEK.RU': ['BR7','Пищулина Ольга Владимировна']\n};\nconst CUR_LOGIN = $('#userinfo a.resparnr').toArray().filter(v => v.innerText.match(/.*@.*/g))[0].title;\nconsole.log('%c%s', 'color:lime', 'Текущий менеджер: ' + MNGRS[CUR_LOGIN].join('\\t') + '\\t' + CUR_LOGIN);\nlet profile = null;\ngetProfile().then(r => {\n\tprofile = r;\n\tlet d = $('#nav div.nav_inner_class')[0];\n\tif(!d) {\n\t\tthrow new Error('[ getProfile ] не удалось получить элемент d');\n\t};\n\t\nlet liE = document.createElement('li');\nliE.setAttribute('class','');\nliE.innerHTML = `<a target=\"_self\" href=\"\" title=\"Secret menu\">\n                  <div class=\"menu_icon\">\n                   <i class=\"arm-icon arm-icon-chrome-reader-mode\"></i>\n                  </div>\n                  <div>\n                   Секретное меню\n                  </div>\n                </a>`;\nlet bar = $('#header ul.nav')[0];\nif(!bar) console.log('Элемент bar не найден!!!!');\nbar.appendChild(liE);\n\t\n\t// let myHTML = `<div class=\"row\">\n //               <ul class=\"cm-string\">\n //                   <li class=\"dropdown\"><b>Менеджер: </b>\n //                   \t<a class=\"dropdown-toggle mcss\" title>${r[0]} ${r[1]}</a>\n //                   </li>\n //               </ul>        \n //           </div>`\n\t// d.innerHTML += myHTML;\n}).catch(() => console.log('Wrong PROFILE !'));\n\n//Получение SAP40 кода клиента\nlet clientData = $('[data-client]')[0];\nlet sap40 = 0;\nif(clientData == undefined) {\n\tconsole.log('%c%s','color: pink', 'SAP40 is undefined');\n} else {\n\tsap40 = clientData.dataset.client;\n\tconsole.log('%c%s','color: yellow', 'SAP40 : ' + sap40);\n}\n//Получение списка менеджеров SA40\nconst MNGR_LIST = async () => { \n\treturn await getApiAjax('/receive_calls/getManagerList', {}, () => true, () => console.log('Error!')).then(getMngrs);\n\t\n\tfunction getMngrs(resp) {\n\t\tlet arr = resp.data.filter(m => m.OFFICE == OFFICE);\n\t\tlet mngrs = [];\n\t\tarr.forEach(m => {\n\t\t\tlet mngr = m.GROUP + '\\t' + m.LTEXT + '\\t' + m.LOGIN + '\\t' + m.BOSS;\n\t\t\tif (m.LOGIN == CUR_LOGIN) {\n\t\t\t\tconsole.log('%c%s','color: lime','Текущий менеджер: ' + mngr);\n\t\t\t}\n\t\t\tmngrs.push(mngr);\n\t\t})\n\t\tconsole.log('-'.repeat(60));\n\t\tconsole.log(mngrs.join('\\n'));\n\t\treturn mngrs;\n\t};\n}\n\n/*\n=========================================================================================\nordersUnlocker v 1.2 17/03/23\nавтор: Volkov Alexey\nФункция деблокировки заказов на закупку и по кредитному лимиту\n=========================================================================================\n*/\nfunction ordersUnlocker() {\n\tconst NAME_FN = 'ordersUnlocker';\n\tconst SL = '-'.repeat(50);\n\tconst SP = ' '.repeat((SL.length - NAME_FN.length) / 2);\n\t\n\tconsole.log('%c%s', 'color:orange',SL + `\\n${SP}ordersUnlocker\\n`+ SL);\n\tconsole.log('%c%s', 'color: yellow', 'Начало выполнения деблокировки: ' + moment().format('DD.MM.YYYY HH:mm:ss'));\n\t\n\tconst MAX_NETWR = 50_000;\n\tconst D = {\n\t  Block: \"X\",\n\t  Edate: moment().format('DD.MM.YYYY'),\n\t  Kunnr: \"\",\n\t  Mngrs: CUR_MNGR,\n\t  Route: \"\",\n\t  Sdate: moment().subtract(1, 'months').format('DD.MM.YYYY'),\n\t  VSTEL: \"\",\n\t  Vkgrp: \"\",\n\t  vkorg: \"4000\",\n\t  Deblock: \"\"\n\t};\n\t\n\tgetDataBlockCreation()\n\t\t.then(r => renderDataBlockCreation(r))\n\t\t.then(getDataBlockCredit)\n\t\t.then((r) => renderDataBlockCredit(r))\n\t\t.then(() => console.log('%c%s', 'color:orange',SL + '\\nДеблокирование полностью завершено\\n'+ SL))\n\t\t.catch(() => console.log('Программа остановлена'));\n\n\tfunction getDataBlockCreation() {\n\t\t\n\t\tconsole.log('Получение списка заказов, блокированных на закупку ...')\n\t\tconst URL = '/tools_common/tool_common_unlock_order_creation/getData';\n\n\t\treturn getApiAjax(URL, D, (r) => console.log('Success: ', r) , err);\n\t};\n\n\tasync function renderDataBlockCreation(response) {\n\t\tlet allOrders = response.data;\n\t\tlet n = allOrders.length;\n\t\tif(n == 0) {\n\t\t\tconsole.log('[ Блок на закупку ] Список заказов пуст!');\n\t\t\treturn false;\n\t\t};\n\t\tlet orders = allOrders.filter(o => parseFloat(o.SummOvr) == 0);\n\t\tlet m = orders.length;\n\t\tconsole.log('Число заказов для деблокировки на закупку: '  + m + ' из ' + n);\n\t\tif(m == 0) {\n\t\t\treturn false;\n\t\t};\n\t\tconsole.log(SL);\n\t\tfor(const order of orders) {\n\t\t\tlet z = await unlockCreation(order);\n\t\t\tconsole.log(z);\n\t\t};\n\t\tconsole.log(SL);\n\t};\n\n\tfunction unlockCreation(order) {\n\t\tlet fields = ['Vbeln', 'Netwr', 'Namerg'];\n\t\tlet inf = fields.map(v => order[v]).join('\\t');\n\t\tconst URL = '/tools_common/tool_common_unlock_order_creation/unlock';\n\t\tlet sendData = {\n\t\t\t\t'Deltxt': order.SummOvr,\n\t\t\t\t'Justify': 'ЮЛ, закупка КД. Отсутствие ПДЗ.',\n\t\t\t\t'Reason': 'Личная ответственность менеджера',\n\t\t\t\t'SummDdz': order.SummDdz,\n\t\t\t\t'Vbeln': order.Vbeln\n\t\t\t};\n\t\tlet msg = inf + '\\t[деблокирован на закупку]';\n\t\t//return debug().then(() => {return msg;});\n\t\treturn getApiAjax(URL, sendData, () => {return true;}, () => console.log('[ Ошибка! ]' + inf)).then(() => {return msg;});\n\t};\n\n\tfunction getDataBlockCredit() {\n\t\tconsole.log('Получение списка заказов, блокированных по кредиту ...')\n\t\tconst URL = '/tools_common/tool_common_unlock_credit/getData';\n\n\t\treturn getApiAjax(URL, D, (r) => console.log('Success: ', r) , err);\n\t};\n\n\tasync function renderDataBlockCredit(response) {\n\t\tlet allOrders = response.data;\n\t\tlet n = allOrders.length;\n\t\tif(n == 0) {\n\t\t\tconsole.log('[ Блок по кредиту ] Список заказов пуст!');\n\t\t\treturn false;\n\t\t};\n\t\tlet orders = allOrders.filter(o => o.SummLim > 0 && parseFloat(o.SummOvr) == 0 && parseFloat(o.SummDdz) < 0);\n\t\tconsole.log();\n\t\tlet m = orders.length;\n\t\tconsole.log('Число заказов для деблокировки по кредиту: '  + m + ' из ' + n);\n\t\tif(m == 0) {\n\t\t\treturn false;\n\t\t};\n\t\tconsole.log(SL);\n\t\tfor(const order of orders) {\n\t\t\tlet z = await unlockCredit(order);\n\t\t\tconsole.log(z);\n\t\t};\n\t\tconsole.log(SL);\n\t};\n\n\tfunction unlockCredit(order) {\n\t\tlet sum = parseFloat(order.Netwr);\n\t\tlet msg = '';\n\t\tif(sum > MAX_NETWR) {\n\t\t\tmsg = 'Заказ ' + order.Vbeln + ' на сумму ' + sum.toFixed(2) +  ' руб. не деблокирован, т.к. его сумма превышает ' + MAX_NETWR + ' .руб [' + order.Namerg + ']';\n\t\t\treturn msg;\n\t\t}\n\t\tlet OL = order.SummDdz;\t\t\t\n\t\tlet comment = 'Превышение лимита [*] руб., просроченные платежи отсутствуют.';\n\t\tlet overLimit = parseFloat(-OL).toLocaleString();\n\t\tcomment = comment.replace('[*]', overLimit)\n\t\tlet fields = ['Vbeln', 'Netwr', 'Namerg'];\n\t\tlet inf = fields.map(v => order[v]).join('\\t');\n\t\tconst URL = '/tools_common/tool_common_unlock_credit/unlock';\n\t\tlet sendData = {\n\t\t\t\t'Deltxt': order.SummOvr,\n\t\t\t\t'Justify': comment,\n\t\t\t\t'Reason': 'Личная ответственность менеджера',\n\t\t\t\t'SummDdz': order.SummDdz,\n\t\t\t\t'Vbeln': order.Vbeln\n\t\t\t};\n\t\tmsg = inf + '\\t[деблокирован по кредиту]\\t' + comment;\n\t\t//return debug().then(() => {return msg;});\n\t\treturn getApiAjax(URL, sendData, () => {return true;}, () => console.log('[ Ошибка! ]' + inf)).then(() => {return msg;});\n\t};\n\t\n\tfunction err() {\n\t\tconsole.log('%c%s', 'color:red','Ошибка! Что-то пошло не так ...');\n\t};\n\n\tfunction success() {\n\t\tconsole.log('%c%s', 'color:green','Status: OK');\n\t}\n\t\n\tfunction debug() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => resolve(true), 1000);\n\t\t})\t\t\n\t}\n};\n\n/*\n=========================================================================================\nscheduler v 1.0 17/03/23\nавтор: Volkov Alexey\nФункция для запуска другой функции по таймингу со смещением по времени\n=========================================================================================\n*/\nfunction scheduler(fn, timingsArr, timeShift) {\n\tconst FMT = 'HH:mm';\n\ttimingsArr.forEach(t => {\n\t\tlet curTime = moment();\n\t\tlet runTime = moment(t, FMT).subtract(timeShift,'minutes');\n\t\tlet timeout = runTime.diff(curTime,'milliseconds');\n\t\tif(timeout >= 0) {\n\t\t\tlet h = moment.duration(timeout, 'milliseconds').hours();\n\t\t\tlet m = moment.duration(timeout, 'milliseconds').minutes();\n\t\t\tlet s = moment.duration(timeout, 'milliseconds').seconds();\n\t\t\tlet hms = h + ':' + m + ':' + s;\n\t\t\tconsole.log('[Тайминг > ' + t + ']' + ' Запуск в ' + runTime.format(FMT) + '\\t' + 'Текущее время ' + curTime.format(FMT) + '\\t' + 'Таймаут ' + hms );\n\t\t\tsetTimeout(fn, timeout);\n\t\t} else {\n\t\t\tconsole.log('Запуск в %s пропущен', t);\n\t\t};  \n\t});\n};\n\nasync function getVP1KB() {\n\tlet d = {\n\t            'client': sap40,\n\t            'tg': '',\n\t            'view': 'client',\n\t            'brands': KB,\n\t            'month_from': '202303',\n\t            'month_to': '202303',\n\t            'item': '3'\n\t        }\n\n\tlet r = await getApiAjax('/reports/reports_tg_brands/getReport', d, (r) => console.log(r), () => console.log('Error!'));\n\tconsole.log('KB_VP1EUR = ' + r.data.STCLT[0].VP1EUR);\n\t\n};\n\nasync function getProfile() {\n    const RGX = (/\\[ (.{3}) \\] (.*)?</);\n    const resp = await fetch('https://etp.armtek.ru/profile/rg');\n    const txt = await resp.text();\n    let s = txt.indexOf('Ваши менеджеры');\n    let f = txt.indexOf('Специалист по продаже');\n    let str = txt.slice(s, f);\n    let info = str.match(RGX);\n    return [info[1], info[2]];\n};\n\n//INKOR-URALSK дубль заказов\nfunction checkDuplicateOrdersCurDateInkor() {\n\tlet curDate = moment().format('DD.MM.YYYY');\n\tsetAG('40011310').then(() => checkDuplicateOrdersByComment(curDate, curDate));\n};\n\nfunction checkDuplicateOrdersByComment(sDate, eDate, delOrders = 0) {\n\tconst SL = '-'.repeat(50);\n\tlet name = 'checkDuplicateOrdersInkor';\n\tlet n = (SL.length - name.length) / 2; \n\tlet shiftSpace = ' '.repeat(n);\n\t\n\tconsole.log('%c%s', 'color: gold', SL + '\\r\\n' + shiftSpace + name + shiftSpace + '\\r\\n' + SL);\n\tconsole.log('%c%s', 'color: yellow', moment().format('DD.MM.YYYY HH:mm:ss'));\n\t\n\tlet urlOrders = '/order/getReport/';\n\tlet d = delOrders == 1 ? 'X':'';\n\n\tlet payload = {\n\t\t'report_type': 'position',\n\t\t'TYPEZK_SALE': 'X',\n\t\t'TYPEZK_RETN': '',\n\t\t'STDIFF': 'X',\n\t\t'TYPEZK_SERV': 'X',\n\t\t'STATZK_A': 'X',\n\t\t'STATZK_B': 'X',\n\t\t'STATZK_C': 'X',\n\t\t'STATZK_D': d,\n\t\t'SCRDATE': sDate,\n\t\t'ECRDATE': eDate,\n\t\t'SDLDATE': '',\n\t\t'EDLDATE': '',\n\t\t'PARNR': '',\n\t\t'BRAND': [],\n\t\t'TRANSPORT_FROM': '',\n\t\t'CLIENT_TRANSPORT': '',\n\t\t'KUNNR_ZA': '',\n\t\t'OLDST': '0'\n\t};\n\t\n\tgetApiAjax(urlOrders, payload, showDuplicate, ()=>console.log('Err!')).then(informModal.hideMessage);\n\n\tfunction showDuplicate(data) {\n\t\tlet name = '[ showDuplicate ]';\n\t\tlet controlMap = new Map();\n\t\tlet duplicates = [];\n\t\tlet positionsArr = data.data.data; \n\t\tconsole.log('orders position:', positionsArr);\n\t\tpositionsArr.forEach(v => {\n\t\t\tlet k = v.NOTE;\n\t\t\tlet z = v.VBELN;\n\t\t\tlet d = moment(v.AUDAT, 'YYYYMMDD').format('DD.MM.YYYY');\n\t\t\tlet orderSet = controlMap.get(k) == null ? new Set() : controlMap.get(k)[0];\n\t\t\torderSet.add(z);\n\t\t\tcontrolMap.set(k, [orderSet, d]);\n\t\t});\n\n\t\tcontrolMap.forEach((v, k, m) => {\n\t\t\tif(v[0].size > 1) {\n\t\t\t\tduplicates.push(v[1] + '\\t' + Array.from(v[0]).join(', ') + '\\t' + k);\n\t\t\t};\n\t\t});\n\t\tif(duplicates.length > 0) {\n\t\t\tconsole.log('%c%s', 'color: red', name + ' Найдены задвоенные заказы!');\n\t\t\tconsole.log(duplicates.join('\\r\\n'));\n\t\t\t\n\t\t} else {\n\t\t\tconsole.log('%c%s', 'color: lime', name + ' Задвоенные заказы не найдены');\n\t\t};\n\t\tconsole.log('%c%s', 'color: gold', name + ' Процедура завершена' + '\\r\\n' + '='.repeat(50))\n\t};\n};\n\nfunction setAG(AG_code) {\n\tlet fnName = '[ setAG ]';\n\treturn getApiAjax('/authorization/setag',{KUNNR:AG_code}, successFn, errFn);\n\t\n\tfunction successFn(response) {\n\t\tconsole.log(fnName + ' Заказчик успешно изменён на ' + AG_code);\n\t};\n\tfunction errFn() {\n\t\tconsole.log('Ошибка! Что-то пошло не так ...');\n\t};\n};\n\nfunction copilot() {\n\tcheckDuplicateOrdersCurDateInkor();\n\tlet ordersChecker = setInterval(checkDuplicateOrdersCurDateInkor, 1000 * 60 * 30);\n\t\n\tif(moment().isAfter(moment('18:00', 'HH:mm'))) {\n\t\tlet unlocker = setInterval(ordersUnlocker, 1000 * 60 * 30);\n\t} else {\n\t\tscheduler(ordersUnlocker, TIMINGS, 2);\n\t};\n\t\n}\n\n//*** waitForElm ***\n//Функция ожидания появления элемента DOM\nfunction waitForElm(selector) {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tif (document.querySelector(selector)) {\n\t\t\t\t\treturn resolve(document.querySelector(selector));\n\t\t\t\t}\n\n\t\t\t\tconst observer = new MutationObserver(mutations => {\n\t\t\t\t\tif (document.querySelector(selector)) {\n\t\t\t\t\t\tresolve(document.querySelector(selector));\n\t\t\t\t\t\tobserver.disconnect();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tobserver.observe(document.body, {\n\t\t\t\t\tchildList: true,\n\t\t\t\t\tsubtree: true\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\nfunction debug(t) {\n\treturn new Promise((resolve, reject) => {\n\t\tsetTimeout(() => resolve(true), t);\n\t})\t\t\n}\n\nif(location.href == 'https://etp.armtek.ru/profile/messages') {\n\tcopilot();\n}","libs":["Moment"],"name":"","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":"","css":"","id":"http://crm.armtek.*/ru/crm/activity/","js":"/*//http://crm.armtek.---/ru/crm/activity/\r\n *===================================================================================================\r\n *\tgetTaskData v 1.0 22/03/23\r\n *\tПолучение основной информации о задачах в РММ с копией в буфер обмена\r\n *===================================================================================================\r\n */\r\n\r\nfunction getTaskData() {\r\n\tlet webixTblElem = $('.webix_dtable')[0];\r\n\tif(webixTblElem == undefined) {\r\n\t\tthrow new Error('[ getTaskData ] webix data table not found!');\r\n\t}\r\n\tlet data = $$(webixTblElem.id).serialize();\r\n\tlet resultArr = [];\r\n\tconst FIELDS = {\r\n\t\t'№': '',\r\n\t\t'ID задачи': 'OBJECT_ID',\r\n\t\t'ID клиента': 'CUSTOMER_NO',\r\n\t\t'Клиент': 'ACTIVITY_PARTNER_LIST',\r\n\t\t'Тема': 'DESCRIPTION',\r\n\t\t'Инициатор': 'CREATED_BY_LIST',\r\n\t\t'План.дата': 'CONVERTED_BTDATEPLANNED',\r\n\t\t'Факт.дата': '',\r\n\t\t'СГОК': 'PERSON_RESP_LIST',\r\n\t\t'GUID': 'GUID',\r\n\t\t'Комментарий': ''\r\n\t};\r\n\tconst FIELD_VALS = Object.values(FIELDS);\r\n\tconst HEADERS =  Object.keys(FIELDS);\r\n\tconst ELEM_ID = 'resInfo';\r\n\t\r\n\tdata.forEach(d => {\r\n\t\tlet row = [];\r\n\t\tFIELD_VALS.forEach(v => {\r\n\t\t\trow.push(d[v]);\r\n\t\t});\r\n\t\tresultArr.push(row.join('\\t'));\r\n\t});\r\n\tlet resultInfo = HEADERS.join('\\t') + '\\r\\n' + resultArr.join('\\n');\r\n\r\n\tif(document.getElementById(ELEM_ID) != null) {\r\n\t\tdocument.getElementById(ELEM_ID).remove();\r\n\t};\r\n\tlet txtArea = document.createElement('Textarea');\r\n\ttxtArea.textContent = resultInfo;\r\n\ttxtArea.id = ELEM_ID;\r\n\tdocument.body.append(txtArea);\r\n\ttxtArea.select();\r\n\tdocument.execCommand('copy');\r\n\tdocument.getElementById(ELEM_ID).remove();\r\n\tconsole.log(resultInfo);\r\n};\r\n\r\n/*\r\n*=====================================================================================\r\n*\tЗакрытие типовых задач с одинаковым комментарием\r\n*=====================================================================================\r\n*/\r\nasync function closeRoutineTask() {\r\n\tconst SERVICE_NAME = '[ closeRoutineTask ]';\r\n\tlet btnSelector = '#closeBtn';\r\n\tlet inputStr = prompt('Вставьте GUID и комментарий задач для завершения в формате:'+ '\\r\\nguid<tab>комментарий'.repeat(2) + '\\r\\n.....' );\r\n\tif(inputStr == '' || inputStr == null) {\r\n\t\tthrow Error(SERVICE_NAME + ' Список GUID задач пуст');\r\n\t};\r\n\tlet guidCommentPair = inputStr.split('\\r\\n').map(p => p.split('\\t'));\r\n\tfor(let pair of guidCommentPair) {\r\n\t\tif(wrongPair(pair)) {\r\n\t\t\tconsole.error('Пара guid-комментарий не прошла проверку', pair);\r\n\t\t\tcontinue;\r\n\t\t};\r\n\t\tlet guid = pair[0];\r\n\t\tlet comment = pair[1];\r\n\t\tconsole.log('Закрытие задачи: ' + guid + ' >> ' + comment);\r\n\t\t//let r = await debug(1000);\r\n\t\tlet r = await closeActivity(guid, comment);\r\n\t\tlet closeBtn = await waitForElm(btnSelector);\r\n\t\tcloseBtn.click();\r\n\t\tconsole.log(moment().format('HH:mm:ss') + ' >> ' + r);\r\n\t}\r\n}\r\n\r\nfunction wrongPair(pair) {\r\n\t//типовой guid = 3adca512-7402-1eed-b0c7-d74162d80f90 (36 символов)\r\n\tlet rgx = /^.{8}-.{4}-.{4}-.{4}-.{12}$/;\r\n\tlet guid = pair[0];\r\n\treturn guid.length != 36 || pair.length < 2 || !rgx.test(guid) || pair[1] == '';\r\n}\r\n\r\nfunction closeActivity(guid, comment) {\r\n\tlet name = '[ closeActivity ]'\r\n\tconst URL = '/ru/crm/activity/close';\r\n\tlet feedbacks = [];\r\n\tfor(let i = 0; i < 9; i++) {\r\n\t\tlet obj = {\r\n\t\t\t'ZZFEEDBACKID': i + 1,\r\n\t\t\t'ZZRATE': '',\r\n\t\t\t'ZZCOMMENT': ''\r\n\t\t};\r\n\t\tfeedbacks.push(obj)\r\n\t};\r\n\tlet D = {\r\n\t\t'guid': guid,\r\n\t\t'descriptionResult': comment,\r\n\t\t'result': '2',\r\n\t\t'CODEGRUPPE': 'ZARMG031',//Привлечение\r\n\t\t'CODE': 'G314',//Развитие\r\n\t\t'ZZUNDELIVERY': '', \r\n\t\t'ZZREFUSING': '',\r\n\t\t'ZZSHORTAGE': '',\r\n\t\t'ZSTATUS': '',\r\n\t\t'TO_BTFeedbacks': feedbacks\r\n\t};\r\n\tlet msg = name + ' Задача ' + guid + ' закрыта успешно'\r\n\treturn getApiAjax(URL, D, (r)=> console.log(r), () => console.log('Error'))\r\n\t.then(() => {return msg;});\r\n};\r\n\r\n\r\n//*** waitForElm ***\r\n//Функция ожидания появления элемента DOM\r\nfunction waitForElm(selector) {\r\n\t\t\treturn new Promise(resolve => {\r\n\t\t\t\tif (document.querySelector(selector)) {\r\n\t\t\t\t\treturn resolve(document.querySelector(selector));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst observer = new MutationObserver(mutations => {\r\n\t\t\t\t\tif (document.querySelector(selector)) {\r\n\t\t\t\t\t\tresolve(document.querySelector(selector));\r\n\t\t\t\t\t\tobserver.disconnect();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tobserver.observe(document.body, {\r\n\t\t\t\t\tchildList: true,\r\n\t\t\t\t\tsubtree: true\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t};\r\n\r\nfunction debug(t) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tsetTimeout(() => resolve(true), t);\r\n\t})\t\t\r\n}","libs":[],"name":"","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}}]}